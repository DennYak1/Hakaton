
services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: documents
    volumes:
      - ./WorkWithDb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d documents"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 2G

  document-processor:
    build: .
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=documents
      - PG_HOST=db
      - PG_MAX_MEMORY=4GB
      - OCR_TIMEOUT=600
      - BASE_DOWNLOAD_URL=https://hackaton.hb.ru-msk.vkcloud-storage.ru/media
      - DOWNLOAD_MAX_RETRIES=3
      - DOWNLOAD_TIMEOUT=30
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
      - TESSERACT_CMD=/usr/bin/tesseract
      - POPPLER_PATH=/usr/bin
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 4G
    command: >
      /bin/sh -c "
        echo 'Ожидание готовности БД...';
        until pg_isready -h db -U admin -d documents; do sleep 2; done;
        echo 'Восстановление БД...';
        python3 /app/WorkWithDb/RestoreDb.py;
        echo 'Загрузка файлов...';
        python3 /app/WorkWithDb/FileDownloader.py;
        echo 'Обработка данных...';
        python3 /app/Data2.py
      "

volumes:
  pgdata:

